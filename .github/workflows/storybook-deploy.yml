name: Deploy Storybook to GitHub Pages

on:
  push:
    branches:
      - '**'  # Trigger on all branches
    paths:
      - 'src/**'
      - '.github/workflows/storybook-deploy.yml'
  pull_request:
    paths:
      - 'src/**'
    types: [opened, synchronize, reopened]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  # Check if we should build Storybook (has stories)
  check-stories:
    runs-on: ubuntu-latest
    outputs:
      has-stories: ${{ steps.check.outputs.has-stories }}
      branch-name: ${{ steps.branch.outputs.branch-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get branch name
        id: branch
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "branch-name=${{ github.head_ref }}" >> $GITHUB_OUTPUT
          else
            echo "branch-name=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          fi

      - name: Check for stories
        id: check
        run: |
          if find src -name "*.stories.*" -type f | grep -q .; then
            echo "has-stories=true" >> $GITHUB_OUTPUT
            echo "Found Storybook stories, proceeding with deployment"
          else
            echo "has-stories=false" >> $GITHUB_OUTPUT
            echo "No Storybook stories found, skipping deployment"
          fi

  # Build and deploy job
  build-and-deploy:
    needs: check-stories
    if: needs.check-stories.outputs.has-stories == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: Build Storybook
        run: |
          pnpm run build-storybook
        env:
          NODE_OPTIONS: --max_old_space_size=4096


          
      - name: Determine destination directory
        id: dest-dir
        run: |
          BRANCH_NAME="${{ needs.check-stories.outputs.branch-name }}"
          CLEAN_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')
          
          if [[ "$BRANCH_NAME" == "main" || "$BRANCH_NAME" == "master" || "$BRANCH_NAME" == "trunk" ]]; then
            echo "destination=." >> $GITHUB_OUTPUT
            echo "Deploying main branch to root"
          else
            echo "destination=feature-branches/$CLEAN_BRANCH" >> $GITHUB_OUTPUT
            echo "Deploying feature branch to feature-branches/$CLEAN_BRANCH"
          fi
          
      - name: Deploy to GitHub Pages  
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./storybook-static
          destination_dir: ${{ steps.dest-dir.outputs.destination }}
          keep_files: true
          enable_jekyll: false

      - name: Get deployment URL
        id: get-url  
        run: |
          BASE_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          DEST="${{ steps.dest-dir.outputs.destination }}"
          
          if [[ "$DEST" == "." ]]; then
            echo "page-url=${BASE_URL}/" >> $GITHUB_OUTPUT
            echo "Deployed main Storybook to: ${BASE_URL}/"
          else
            echo "page-url=${BASE_URL}/${DEST}/" >> $GITHUB_OUTPUT  
            echo "Deployed feature branch to: ${BASE_URL}/${DEST}/"
          fi