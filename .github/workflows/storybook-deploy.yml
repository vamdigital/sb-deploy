name: Deploy Storybook to GitHub Pages

on:
  push:
    branches:
      - main
      - master
      - trunk
    paths:
      - 'src/**'
      - '.github/workflows/storybook-deploy.yml'
  pull_request:
    paths:
      - 'src/**'
    types: [opened, synchronize, reopened]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  # Check if we should build Storybook (has stories)
  check-stories:
    runs-on: ubuntu-latest
    outputs:
      has-stories: ${{ steps.check.outputs.has-stories }}
      branch-name: ${{ steps.branch.outputs.branch-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get branch name
        id: branch
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "branch-name=${{ github.head_ref }}" >> $GITHUB_OUTPUT
          else
            echo "branch-name=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          fi

      - name: Check for stories
        id: check
        run: |
          if find src -name "*.stories.*" -type f | grep -q .; then
            echo "has-stories=true" >> $GITHUB_OUTPUT
            echo "Found Storybook stories, proceeding with deployment"
          else
            echo "has-stories=false" >> $GITHUB_OUTPUT
            echo "No Storybook stories found, skipping deployment"
          fi

  # Build and deploy job
  build-and-deploy:
    needs: check-stories
    if: needs.check-stories.outputs.has-stories == 'true'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.get-url.outputs.page-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.9.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: Build Storybook
        run: |
          pnpm run build-storybook
        env:
          NODE_OPTIONS: --max_old_space_size=4096

      - name: Prepare deployment directory
        run: |
          # Create deployment structure
          mkdir -p deployment
          
          # Determine deployment path
          BRANCH_NAME="${{ needs.check-stories.outputs.branch-name }}"
          
          if [[ "$BRANCH_NAME" == "main" || "$BRANCH_NAME" == "master" || "$BRANCH_NAME" == "trunk" ]]; then
            # Main branch goes to root
            cp -r src/storybook-static/* deployment/
            echo "Deploying to root for branch: $BRANCH_NAME"
          else
            # Feature branches go to subdirectories
            CLEAN_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')
            mkdir -p "deployment/$CLEAN_BRANCH"
            cp -r src/storybook-static/* "deployment/$CLEAN_BRANCH/"
            echo "Deploying to subdirectory: $CLEAN_BRANCH"
            
            # Create/update index page that lists all deployments
            cat > deployment/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Storybook Deployments</title>
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; margin: 2rem; }
                  .container { max-width: 800px; margin: 0 auto; }
                  .deployment { background: #f5f5f5; padding: 1rem; margin: 1rem 0; border-radius: 8px; }
                  .deployment h3 { margin: 0 0 0.5rem 0; }
                  .deployment a { color: #0366d6; text-decoration: none; }
                  .deployment a:hover { text-decoration: underline; }
                  .main-deployment { background: #e3f2fd; border-left: 4px solid #2196f3; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>ðŸŽ¨ Storybook Deployments</h1>
                  <p>Available Storybook deployments: </p>
                  
                  <div class="deployment main-deployment">
                      <h3>ðŸ“– Main Storybook</h3>
                      <p>Production version from the main branch</p>
                      <a href="./main/">View Main Storybook â†’</a>
                  </div>
                  
                  <div class="deployment">
                      <h3>ðŸš€ Feature Branch: BRANCH_NAME_PLACEHOLDER</h3>
                      <p>Development version for feature branch</p>
                      <a href="./CLEAN_BRANCH_PLACEHOLDER/">View Branch Storybook â†’</a>
                  </div>
              </div>
          </body>
          </html>
          EOF
            
            # Replace placeholders
            sed -i "s/BRANCH_NAME_PLACEHOLDER/$BRANCH_NAME/g" deployment/index.html
            sed -i "s/CLEAN_BRANCH_PLACEHOLDER/$CLEAN_BRANCH/g" deployment/index.html
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './deployment'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Get deployment URL
        id: get-url
        run: |
          BRANCH_NAME="${{ needs.check-stories.outputs.branch-name }}"
          BASE_URL="${{ steps.deployment.outputs.page_url }}"
          
          if [[ "$BRANCH_NAME" == "main" || "$BRANCH_NAME" == "master" || "$BRANCH_NAME" == "trunk" ]]; then
            echo "page-url=${BASE_URL}" >> $GITHUB_OUTPUT
          else
            CLEAN_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')
            echo "page-url=${BASE_URL}${CLEAN_BRANCH}/" >> $GITHUB_OUTPUT
          fi

      - name: Comment PR with deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.get-url.outputs.page-url }}';
            const branchName = '${{ needs.check-stories.outputs.branch-name }}';
            
            const comment = `## ðŸŽ¨ Storybook Deployment Ready!
            
            Your Storybook has been deployed and is available at:
            
            **ðŸ”— [View Storybook for \`${branchName}\`](${deploymentUrl})**
            
            This deployment will be automatically updated when you push new commits to this branch.
            
            ---
